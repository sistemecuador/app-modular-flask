    user = User.query.get(1)
    # dbb = db.session.query(Categorias.id, Categorias.nombre_categoria).join(Categorias,user.id == 1).all()
    # query = Categorias.query.join(User, Categorias.user_create == user.id).filter(Categorias.user_update == None).all()
    # query = Categorias.query.select_from(User, Categorias).join(User, Categorias.user_create == user.id).all()
    query=db.session.execute(db.select(User.username, User.password)).all()
    query=User.query.select(User.username,User.password).all()
    # print(Categorias.query.filter_by(user_create=user.id).all())
    # print(Categorias.query.join(User, User.id == user.id))
    # query = db.session.query(Categorias).join(User).filter(Categorias.id == user.id).all()
    # query = db.session.query(Categorias).join(User, User.id == user.id,isouter=False)
    print(query)

       # def crear_directorio(self, folder):
    #     directorio = os.path.join(UPLOAD_FOLDER, folder)
    #     if not os.path.exists(directorio):
    #         os.makedirs(directorio, exist_ok=True)
    #     return directorio
    #
    # @property
    # def file(self):
    #     return self.__file
    #
    # @file.setter
    # def file(self, valor):
    #     self.__file = valor
    #
    # @property
    # def kwargs_obj(self):
    #     return self.__kwargs_obj
    #
    # @kwargs_obj.setter
    # def kwargs_obj(self, valor):
    #     self.__kwargs_obj = valor
    #
    # def __get_file(self):
    #     return self.image.data
    #
    # def converter_file(self):
    #     self.file = self.image.data
    #     self.image.data = secure_filename(self.file.filename)
    #     return self.image.data
    #
    # def save_file(self, action='add'):
    #     image_form = secure_filename(self.file.filename)
    #     path = os.path.join(self.get_directorio_form(), image_form)
    #     self.action = action
    #     if image_form != '':
    #         path_file = os.path.join(self.get_directorio_form(), f'{self.codigo_cat.data}/{image_form}')
    #         print("La imagen no esta vacia")
    #         if action == 'edit':
    #             if not self.check_change_codigo():
    #                 self.remove_file(path_file)
    #                 self.remove_file_obj_intance()
    #                 self.file.save(path)
    #             elif self.check_change_codigo():
    #                 self.move_file()
    #         else:
    #             self.file.save(path)
    #     # else:
    #     #     print("La imagen esta vacia")
    #     #     path_file = os.path.join(self.get_directorio_form(), f'{self.codigo_cat.data}/{self.image.data}')
    #     #     if self.check_change_codigo():
    #     #         self.move_file()
    #
    # def check_change_codigo(self):
    #     kwargs_obj = self.kwargs_obj
    #     old_codigo = kwargs_obj.get("codigo_cat", None)
    #     new_codigo = self.codigo_cat.data
    #     if old_codigo != new_codigo:
    #         print("El codigo a camiado")
    #         return True
    #     print("El no cidogo no ha cambiado")
    #     return False
    #
    # def move_file(self):
    #     import shutil
    #     kwargs_obj = self.kwargs_obj
    #     old_codigo = kwargs_obj.get("codigo_cat", None)
    #     new_codigo = self.codigo_cat.data
    #     image = kwargs_obj.get("image", None)
    #     path_file_obj = kwargs_obj.get("path_file", None)
    #     patern_file = os.path.dirname(os.path.abspath(path_file_obj))
    #     if old_codigo != new_codigo:
    #         if path_file_obj:
    #             new_path_file_obj = self.crear_directorio(folder=f'{self.__folder_form()}/{new_codigo}')
    #             old_path_file_obj = os.path.join(UPLOAD_FOLDER, f'{self.__folder_form()}/{old_codigo}/{image}')
    #             if os.path.exists(new_path_file_obj):
    #                 shutil.move(old_path_file_obj, new_path_file_obj)
    #                 print("El archivo se movio", patern_file)
    #                 os.chmod(patern_file, 777)
    #                 os.remove(patern_file)
    #                 print("El archivo se elimino")
    #     else:
    #         print("El archivo no se mocio")
    #         return False
    #
    # def remove_file(self, path):
    #     try:
    #         if os.path.exists(path):
    #             os.remove(path)
    #     except Exception as e:
    #         print("Error", str(e))
    #
    # def remove_file_obj_intance(self):
    #     try:
    #         kwargs_obj = self.kwargs_obj
    #         if kwargs_obj.get("codigo_cat") and kwargs_obj.get("image"):
    #             directorio = os.path.join(UPLOAD_FOLDER, self.__folder_form())
    #             path_file_obj = os.path.join(directorio,
    #                                          f'{kwargs_obj.get("codigo_cat", "")}/{kwargs_obj.get("image", "")}')
    #             if os.path.exists(path_file_obj):
    #                 os.remove(path_file_obj)
    #     except Exception as e:
    #         print("Error", str(e))
    #
    # def populate_obj(self, obj):
    #     self.kwargs_obj = {'image': obj.image, 'codigo_cat': obj.codigo_cat, 'path_file': obj.get_path_file()}
    #     if self.image.data == '':
    #         self.image.data = obj.image
    #     return super(CategoriasForm, self).populate_obj(obj)
    # def get_directorio_form(self):
    #     folder = self.__folder_form()
    #     directorio = os.path.join(UPLOAD_FOLDER, folder)
    #     path_file = os.path.join(directorio, self.codigo_cat.data)
    #     if not os.path.exists(path_file):
    #         os.makedirs(path_file, exist_ok=True)
    #     return path_file